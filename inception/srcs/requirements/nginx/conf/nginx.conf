user				nginx;
worker_processes	auto;

error_log			/var/log/nginx/error.log warn;
pid					/var/run/nginx.pid;

events	{
		worker_connections 1024;
	}

http	{
		include /etc/nginx/mime.types;
		default_type application/octet-stream;

		log_format main '$remote_addr - $remote_user [$time_local] "$request" '
						'$status $body_bytes_sent "$http_referer" '
						'"$http_user_agent" "$http_x_forwarded_for"';

		access_log /var/log/nginx/access.log main;

		sendfile on;
		keepalive_timeout 65;
		server_tokens off;

		# define a logic upstream for PHP-FPM (endpoint for .php)
		upstream php-fpm {
			server wordpress:9000;
		}

		# redirect HTTP -> HTTPS
		server {
			listen 80;
			server_name ${DOMAIN_NAME};
			return 301 https://$host$request_uri;
		}

		# HTTPS config
		server {
			listen 443 ssl;
			server_name ${DOMAIN_NAME};

			# ssl certs paths
			ssl_certificate /etc/nginx/certs/inception.crt;
			ssl_certificate_key /etc/nginx/certs/inception.key;

			# ssl protocols and ciphers
			ssl_protocols				TLSv1.2 TLSv1.3;
			ssl_ciphers					HIGH:!aNULL:!MD5:!SHA1:!RC4;
			ssl_prefer_server_ciphers	on;
			ssl_session_cache			shared:SSL:10m;
			ssl_session_timeout			10m;

			# dir shared with wordpress container
			root /var/www/wordpress;
			index index.php index.html;

			# wordpress conf
			location / {
				try_files $uri $uri/ /index.php?$args;
			}

			# PHP conf via PHP-FPM
			location ~ \.php$ {
				fastcgi_split_path_info ^(.+\.php)(/.+)$;
				fastcgi_pass   php-fpm;
				fastcgi_index  index.php;
				include        fastcgi_params;
		   		fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
				fastcgi_param  PATH_INFO $fastcgi_path_info;
			}

			# blocks the access to hidden files
			location ~ /\. {
				deny all;
				access_log off;
				log_not_found off;
			}

			# blocks the access to debug/log files
			location ~* ^/(wp-content/debug\.log|error_log) {
				deny all;
			}

			# Adminer reverse proxy
			location /adminer/ {
				proxy_pass http://adminer:8080/;
				proxy_http_version 1.1;
				proxy_set_header Host $host;
				proxy_set_header X-Real-IP $remote_addr;
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				proxy_set_header X-Forwarded-Proto $scheme;
			}

			# Static site reverse proxy
			location /docs/ {
				proxy_pass http://static-site:80/;
				proxy_http_version 1.1;
				proxy_set_header Host $host;
				proxy_set_header X-Real-IP $remote_addr;
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				proxy_set_header X-Forwarded-Proto $scheme;
				proxy_set_header X-Forwarded-Host $host;
				proxy_set_header X-Forwarded-Server $host;
				proxy_redirect off;
			}

			location = /prometheus {
				return 302 /prometheus/graph;
			}
			
			location /prometheus/ {
				rewrite ^/prometheus(/.*)$ $1 break;
				proxy_pass http://prometheus:9090;
				proxy_http_version 1.1;
				proxy_set_header Host $host;
				proxy_set_header X-Real-IP $remote_addr;
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				proxy_set_header X-Forwarded-Proto $scheme;
				proxy_set_header X-Forwarded-Host $host;
				proxy_set_header X-Forwarded-Server $host;
				proxy_redirect off;
			}
			# Gzip compression for performance
			gzip on;
			gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
			gzip_min_length 1000;
			gzip_proxied any;
			}
		}
